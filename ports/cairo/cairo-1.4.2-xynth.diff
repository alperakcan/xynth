diff -Naur cairo-1.4.2/boilerplate/Makefile.am cairo-1.4.2-xynth/boilerplate/Makefile.am
--- cairo-1.4.2/boilerplate/Makefile.am	2007-03-20 08:49:29.000000000 +0200
+++ cairo-1.4.2-xynth/boilerplate/Makefile.am	2007-03-22 17:41:17.000000000 +0200
@@ -17,6 +17,10 @@
 libcairoboilerplate_la_SOURCES += cairo-test-directfb.c cairo-test-directfb.h
 endif
 
+if CAIRO_HAS_XYNTH_SURFACE
+libcairoboilerplate_la_SOURCES += cairo-test-xynth.c cairo-test-xynth.h
+endif
+
 if CAIRO_CAN_TEST_GLITZ_AGL_SURFACE
 libcairoboilerplate_la_LIBADD += $(GLITZ_AGL_LIBS)
 endif
diff -Naur cairo-1.4.2/boilerplate/cairo-boilerplate.c cairo-1.4.2-xynth/boilerplate/cairo-boilerplate.c
--- cairo-1.4.2/boilerplate/cairo-boilerplate.c	2007-03-19 22:08:03.000000000 +0200
+++ cairo-1.4.2-xynth/boilerplate/cairo-boilerplate.c	2007-03-23 13:15:34.000000000 +0200
@@ -1037,6 +1037,10 @@
 #include "cairo-test-directfb.h"
 #endif
 
+#if CAIRO_HAS_XYNTH_SURFACE
+#include "cairo-test-xynth.h"
+#endif
+
 #if CAIRO_HAS_PS_SURFACE
 #include "cairo-ps.h"
 
@@ -1368,6 +1372,7 @@
     /* I'm uncompromising about leaving the image backend as 0
      * for tolerance. There shouldn't ever be anything that is out of
      * our control here. */
+#if 0
     { "image", CAIRO_SURFACE_TYPE_IMAGE, CAIRO_CONTENT_COLOR_ALPHA, 0,
       create_image_surface, cairo_surface_write_to_png, NULL},
     { "image", CAIRO_SURFACE_TYPE_IMAGE, CAIRO_CONTENT_COLOR, 0,
@@ -1515,6 +1520,26 @@
       create_directfb_surface, cairo_surface_write_to_png,cleanup_directfb},
 #endif
 
+#if CAIRO_HAS_XYNTH_SURFACE
+    { "xynth", CAIRO_SURFACE_TYPE_XYNTH, CAIRO_CONTENT_COLOR, 0,
+      create_xynth_surface, cairo_surface_write_to_png, cleanup_xynth},
+    { "xynth", CAIRO_SURFACE_TYPE_XYNTH, CAIRO_CONTENT_COLOR_ALPHA, 0,
+      create_xynth_surface, cairo_surface_write_to_png, cleanup_xynth},
+#endif
+#else
+    /* Acceleration architectures may make the results differ by a
+     * bit, so we set the error tolerance to 1. */
+    { "xlib", CAIRO_SURFACE_TYPE_XLIB, CAIRO_CONTENT_COLOR_ALPHA, 1,
+      create_xlib_surface, cairo_surface_write_to_png, cleanup_xlib,
+      boilerplate_xlib_synchronize},
+    { "xlib", CAIRO_SURFACE_TYPE_XLIB, CAIRO_CONTENT_COLOR, 1,
+      create_xlib_surface, cairo_surface_write_to_png, cleanup_xlib,
+      boilerplate_xlib_synchronize},
+    { "xynth", CAIRO_SURFACE_TYPE_XYNTH, CAIRO_CONTENT_COLOR, 0,
+      create_xynth_surface, cairo_surface_write_to_png, cleanup_xynth},
+    { "xynth", CAIRO_SURFACE_TYPE_XYNTH, CAIRO_CONTENT_COLOR_ALPHA, 0,
+      create_xynth_surface, cairo_surface_write_to_png, cleanup_xynth},
+#endif
     { NULL }
 };
 
diff -Naur cairo-1.4.2/boilerplate/cairo-test-xynth.c cairo-1.4.2-xynth/boilerplate/cairo-test-xynth.c
--- cairo-1.4.2/boilerplate/cairo-test-xynth.c	1970-01-01 02:00:00.000000000 +0200
+++ cairo-1.4.2-xynth/boilerplate/cairo-test-xynth.c	2007-03-26 12:00:47.000000000 +0300
@@ -0,0 +1,29 @@
+
+#include <stdio.h>
+#include <stdlib.h>
+#include "cairo-boilerplate.h"
+#include <xynth.h>
+#include "cairo-xynth.h"
+#include "cairo-test-xynth.h"
+
+typedef struct xynth_boiler_s {
+	s_window_t *window;
+} xynth_boiler_t;
+
+void cleanup_xynth (void *closure)
+{
+}
+
+cairo_surface_t * create_xynth_surface (const char *name, cairo_content_t content, int width, int height, cairo_boilerplate_mode_t mode, void *closure) 
+{
+	xynth_boiler_t *xynth;
+	xynth = (xynth_boiler_t *) malloc(sizeof(xynth_boiler_t));
+	memset(xynth, 0, sizeof(xynth_boiler_t));
+	if (width <= 0) width = 1;
+	if (height <= 0) height = 1;
+	if (mode == CAIRO_BOILERPLATE_MODE_TEST) {
+		return cairo_xynth_surface_create(width, height, content);
+	} else if (mode == CAIRO_BOILERPLATE_MODE_PERF) {
+	}
+	return NULL;
+}
diff -Naur cairo-1.4.2/boilerplate/cairo-test-xynth.h cairo-1.4.2-xynth/boilerplate/cairo-test-xynth.h
--- cairo-1.4.2/boilerplate/cairo-test-xynth.h	1970-01-01 02:00:00.000000000 +0200
+++ cairo-1.4.2-xynth/boilerplate/cairo-test-xynth.h	2007-03-22 17:41:17.000000000 +0200
@@ -0,0 +1,9 @@
+
+#include <cairo.h>
+
+CAIRO_BEGIN_DECLS
+
+extern void cleanup_xynth (void *closure);
+extern cairo_surface_t * create_xynth_surface (const char *name, cairo_content_t content, int width, int height, cairo_boilerplate_mode_t mode, void *closure); 
+
+CAIRO_END_DECLS
diff -Naur cairo-1.4.2/configure.in cairo-1.4.2-xynth/configure.in
--- cairo-1.4.2/configure.in	2007-03-20 08:23:49.000000000 +0200
+++ cairo-1.4.2-xynth/configure.in	2007-03-22 17:41:17.000000000 +0200
@@ -226,6 +226,14 @@
 
 dnl ===========================================================================
 
+CAIRO_BACKEND_ENABLE(xynth, xynth, xynth, XYNTH_SURFACE, auto, [
+  xynth_REQUIRES=xynth
+  PKG_CHECK_MODULES(xynth, $xynth_REQUIRES, , AC_MSG_RESULT(no)
+		    [use_xynth="no (requires xynth http://www.xynth.org)"])
+])
+
+dnl ===========================================================================
+
 CAIRO_BACKEND_ENABLE(xlib, Xlib, xlib, XLIB_SURFACE, auto, [
   xlib_REQUIRES="x11"
   PKG_CHECK_MODULES(xlib, $xlib_REQUIRES, ,
@@ -894,6 +902,7 @@
 echo "  glitz:         $use_glitz"
 echo "  BeOS:          $use_beos"
 echo "  DirectFB:      $use_directfb"
+echo "  Xynth:         $use_xynth"
 echo ""
 echo "the following font backends:"
 echo "  FreeType:      $use_ft"
@@ -957,3 +966,7 @@
 if test x"$use_directfb" = "xyes" ; then
      echo "$WARNING_MESSAGE" | sed 's/@BACKEND@/DirectFB/'
 fi
+
+if test x"$use_xynth" = "xyes" ; then
+     echo "$WARNING_MESSAGE" | sed 's/@BACKEND@/Xynth/'
+fi
diff -Naur cairo-1.4.2/perf/cairo-perf.c cairo-1.4.2-xynth/perf/cairo-perf.c
--- cairo-1.4.2/perf/cairo-perf.c	2007-03-19 22:08:03.000000000 +0200
+++ cairo-1.4.2-xynth/perf/cairo-perf.c	2007-03-22 17:41:17.000000000 +0200
@@ -76,6 +76,7 @@
     case CAIRO_SURFACE_TYPE_WIN32:
     case CAIRO_SURFACE_TYPE_BEOS:
     case CAIRO_SURFACE_TYPE_DIRECTFB:
+    case CAIRO_SURFACE_TYPE_XYNTH:
 #if CAIRO_VERSION_MAJOR > 1 || (CAIRO_VERSION_MAJOR == 1 && CAIRO_VERSION_MINOR > 2)
     case CAIRO_SURFACE_TYPE_OS2:
 #endif
diff -Naur cairo-1.4.2/src/Makefile.am cairo-1.4.2-xynth/src/Makefile.am
--- cairo-1.4.2/src/Makefile.am	2007-03-19 22:08:03.000000000 +0200
+++ cairo-1.4.2-xynth/src/Makefile.am	2007-03-22 17:41:17.000000000 +0200
@@ -113,6 +113,12 @@
 backend_pkgconfigs += cairo-directfb.pc
 endif
 
+if CAIRO_HAS_XYNTH_SURFACE
+libcairo_xynth_headers = cairo-xynth.h
+libcairo_xynth_sources = cairo-xynth-surface.c
+backend_pkgconfigs += cairo-xynth.pc
+endif
+
 if CAIRO_HAS_FT_FONT
 libcairo_ft_headers = cairo-ft.h
 libcairo_ft_sources = cairo-ft-font.c cairo-ft-private.h
@@ -147,7 +153,8 @@
 	$(libcairo_xcb_headers)		\
 	$(libcairo_xlib_headers)	\
 	$(libcairo_xlib_xrender_headers)	\
-	$(libcairo_directfb_headers)
+	$(libcairo_directfb_headers)	\
+	$(libcairo_xynth_headers)
 
 cairoincludedir = $(includedir)/cairo
 cairoinclude_HEADERS =			\
@@ -237,6 +244,7 @@
 	$(libcairo_win32_sources)		\
 	$(libcairo_os2_sources)			\
 	$(libcairo_directfb_sources)		\
+	$(libcairo_xynth_sources)		\
 	cairoint.h
 
 libcairo_la_LDFLAGS = -version-info @VERSION_INFO@ -no-undefined $(export_symbols)
diff -Naur cairo-1.4.2/src/cairo-xynth.h cairo-1.4.2-xynth/src/cairo-xynth.h
--- cairo-1.4.2/src/cairo-xynth.h	1970-01-01 02:00:00.000000000 +0200
+++ cairo-1.4.2-xynth/src/cairo-xynth.h	2007-03-26 12:00:10.000000000 +0300
@@ -0,0 +1,2 @@
+
+cairo_surface_t * cairo_xynth_surface_create (unsigned int width, unsigned int height, cairo_content_t content);
diff -Naur cairo-1.4.2/src/cairo.h cairo-1.4.2-xynth/src/cairo.h
--- cairo-1.4.2/src/cairo.h	2007-03-19 22:08:04.000000000 +0200
+++ cairo-1.4.2-xynth/src/cairo.h	2007-03-22 17:41:17.000000000 +0200
@@ -1435,6 +1435,7 @@
  * @CAIRO_SURFACE_TYPE_DIRECTFB: The surface is of type directfb
  * @CAIRO_SURFACE_TYPE_SVG: The surface is of type svg
  * @CAIRO_SURFACE_TYPE_OS2: The surface is of type os2
+ * @CAIRO_SURFACE_TYPE_XYNTH: The surface if of type xynth
  *
  * #cairo_surface_type_t is used to describe the type of a given
  * surface. The surface types are also known as "backends" or "surface
@@ -1471,7 +1472,8 @@
     CAIRO_SURFACE_TYPE_BEOS,
     CAIRO_SURFACE_TYPE_DIRECTFB,
     CAIRO_SURFACE_TYPE_SVG,
-    CAIRO_SURFACE_TYPE_OS2
+    CAIRO_SURFACE_TYPE_OS2,
+    CAIRO_SURFACE_TYPE_XYNTH
 } cairo_surface_type_t;
 
 cairo_public cairo_surface_type_t
diff -Naur cairo-1.4.2/test/buffer-diff.c cairo-1.4.2-xynth/test/buffer-diff.c
--- cairo-1.4.2/test/buffer-diff.c	2007-03-19 22:08:04.000000000 +0200
+++ cairo-1.4.2-xynth/test/buffer-diff.c	2007-03-23 21:12:27.000000000 +0200
@@ -149,6 +149,8 @@
     cairo_test_log ("%d pixels differ (with maximum difference of %d) from reference image\n",
 		    result->pixels_changed, result->max_diff);
 
+    return;
+
     /* Then, if there are any different pixels, we give the pdiff code
      * a crack at the images. If it decides that there are no visually
      * discernible differences in any pixels, then we accept this
diff -Naur cairo-1.4.2/test/get-clip.c cairo-1.4.2-xynth/test/get-clip.c
--- cairo-1.4.2/test/get-clip.c	2007-03-19 22:08:04.000000000 +0200
+++ cairo-1.4.2-xynth/test/get-clip.c	2007-03-22 17:41:17.000000000 +0200
@@ -138,6 +138,7 @@
     case CAIRO_SURFACE_TYPE_WIN32:
     case CAIRO_SURFACE_TYPE_BEOS:
     case CAIRO_SURFACE_TYPE_DIRECTFB:
+    case CAIRO_SURFACE_TYPE_XYNTH:
         uses_clip_rects = TRUE;
 	break;
     case CAIRO_SURFACE_TYPE_QUARTZ:
